<Window x:Class="Nodify.StateMachine.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Nodify.StateMachine"
        xmlns:nodify="http://miroiu.github.io/winfx/xaml/nodify"
        ResizeMode="CanResizeWithGrip"
        mc:Ignorable="d"
        Title="State Machine Editor"
        Height="450"
        Width="800">
    <Window.DataContext>
        <local:StateMachineViewModel />
    </Window.DataContext>

    <Window.Resources>
        <local:BindingProxy x:Key="EditorProxy"
                            DataContext="{Binding}" />
        <local:HalfSizeWithOffsetConverter x:Key="HalfSizeWithOffsetConverter" />
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:BooleanToVisibilityConverter x:Key="NegateBooleanToVisibilityConverter"
                                            Negate="True" />
    </Window.Resources>

    <Grid>
        <nodify:NodifyEditor ItemsSource="{Binding States}"
                             SelectedItems="{Binding SelectedStates}"
                             Connections="{Binding Transitions}"
                             PendingConnection="{Binding PendingTransition}"
                             DisconnectConnectorCommand="{Binding DisconnectStateCommand}"
                             ConnectionCompletedCommand="{Binding CreateTransitionCommand}">
            <nodify:NodifyEditor.Resources>
                <Style TargetType="{x:Type nodify:PendingConnection}"
                       BasedOn="{StaticResource {x:Type nodify:PendingConnection}}">
                    <Setter Property="StrokeDashArray"
                            Value="" />
                    <Setter Property="EnablePreview"
                            Value="True" />
                    <Setter Property="BorderBrush"
                            Value="White" />
                </Style>
            </nodify:NodifyEditor.Resources>

            <nodify:NodifyEditor.PendingConnectionTemplate>
                <DataTemplate DataType="{x:Type local:TransitionViewModel}">
                    <nodify:PendingConnection Source="{Binding Source, Mode=OneWayToSource}"
                                              Target="{Binding Target, Mode=OneWayToSource}">
                        <nodify:PendingConnection.Template>
                            <ControlTemplate TargetType="{x:Type nodify:PendingConnection}">
                                <nodify:DirectionalConnection Source="{TemplateBinding SourceAnchor}"
                                                              Target="{TemplateBinding TargetAnchor}"
                                                              Stroke="{TemplateBinding BorderBrush}"
                                                              StrokeThickness="{TemplateBinding StrokeThickness}"
                                                              StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                                              Fill="{TemplateBinding BorderBrush}"
                                                              SourceOffset="{Binding Source.Size}"
                                                              OffsetMode="Edge" />
                            </ControlTemplate>
                        </nodify:PendingConnection.Template>
                    </nodify:PendingConnection>
                </DataTemplate>
            </nodify:NodifyEditor.PendingConnectionTemplate>

            <nodify:NodifyEditor.ConnectionTemplate>
                <DataTemplate DataType="{x:Type local:TransitionViewModel}">
                    <nodify:DirectionalConnection Source="{Binding Source.Anchor}"
                                                  Target="{Binding Target.Anchor}"
                                                  SourceOffset="{Binding Source.Size}"
                                                  TargetOffset="{Binding Target.Size}"
                                                  OffsetMode="Edge"
                                                  Tag="{Binding}">
                        <nodify:DirectionalConnection.Style>
                            <Style TargetType="{x:Type nodify:DirectionalConnection}">
                                <Setter Property="StrokeThickness"
                                        Value="3" />
                                <Setter Property="Stroke"
                                        Value="White" />
                                <Setter Property="Fill"
                                        Value="White" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Target.IsActive}"
                                                 Value="True">
                                        <Setter Property="Stroke"
                                                Value="#8DD28A" />
                                        <Setter Property="StrokeThickness"
                                                Value="6" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </nodify:DirectionalConnection.Style>
                        <nodify:DirectionalConnection.ContextMenu>
                            <ContextMenu DataContext="{Binding DataContext, Source={StaticResource EditorProxy}}">
                                <MenuItem Header="_Delete"
                                          Icon="{StaticResource DeleteIcon}"
                                          Command="{Binding DeleteTransitionCommand}"
                                          CommandParameter="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                            </ContextMenu>
                        </nodify:DirectionalConnection.ContextMenu>
                    </nodify:DirectionalConnection>
                </DataTemplate>
            </nodify:NodifyEditor.ConnectionTemplate>

            <nodify:NodifyEditor.ItemTemplate>
                <DataTemplate DataType="{x:Type local:StateViewModel}">
                    <!--If IsConnected is false, Anchor won't be updated-->
                    <nodify:StateNode Content="{Binding}"
                                      IsConnected="True"
                                      Size="{Binding Size, Mode=OneWayToSource, Converter={StaticResource HalfSizeWithOffsetConverter}, ConverterParameter=5}"
                                      Anchor="{Binding Anchor, Mode=OneWayToSource}">
                        <nodify:StateNode.ContentTemplate>
                            <DataTemplate DataType="{x:Type local:StateViewModel}">
                                <local:EditableTextBlock Text="{Binding Name}"
                                                         IsEditing="{Binding IsRenaming}"
                                                         IsEditable="{Binding IsEditable}" />
                            </DataTemplate>
                        </nodify:StateNode.ContentTemplate>
                        <nodify:StateNode.Style>
                            <Style TargetType="{x:Type nodify:StateNode}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEditable}"
                                                 Value="False">
                                        <Setter Property="BorderBrush"
                                                Value="#E6AF86" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsActive}"
                                                 Value="True">
                                        <Setter Property="BorderBrush"
                                                Value="#8DD28A" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </nodify:StateNode.Style>
                    </nodify:StateNode>
                </DataTemplate>
            </nodify:NodifyEditor.ItemTemplate>

            <nodify:NodifyEditor.ItemContainerStyle>
                <Style TargetType="{x:Type nodify:ItemContainer}"
                       BasedOn="{StaticResource {x:Type nodify:ItemContainer}}">
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                    <Setter Property="Location"
                            Value="{Binding Location}" />
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu DataContext="{Binding DataContext, Source={StaticResource EditorProxy}}">
                                <MenuItem Header="_Delete"
                                          Icon="{StaticResource DeleteIcon}"
                                          Command="{Binding DeleteSelectionCommand}" />
                                <MenuItem Header="Di_sconnect"
                                          Icon="{StaticResource DisconnectIcon}"
                                          Command="{Binding DisconnectSelectionCommand}" />
                                <MenuItem Header="_Rename"
                                          Icon="{StaticResource RenameIcon}"
                                          Command="{Binding RenameStateCommand}" />
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </nodify:NodifyEditor.ItemContainerStyle>

            <nodify:NodifyEditor.ContextMenu>
                <ContextMenu DataContext="{Binding DataContext, Source={StaticResource EditorProxy}}"
                             Visibility="{Binding IsPanning, Converter={StaticResource NegateBooleanToVisibilityConverter}}">
                    <MenuItem Header="_Add State"
                              Icon="{StaticResource AddStateIcon}"
                              InputGestureText="Shift+A"
                              Command="{Binding AddStateCommand}"
                              CommandParameter="{Binding PlacementTarget.MouseLocation, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                    <MenuItem Header="_Delete"
                              Icon="{StaticResource DeleteIcon}"
                              InputGestureText="Delete"
                              Command="{Binding DeleteSelectionCommand}" />
                    <Separator Background="#2D2D30" />
                    <MenuItem Header="_Select All"
                              Icon="{StaticResource SelectAllIcon}"
                              InputGestureText="Ctrl+A"
                              Command="{Binding SelectAllCommand}" />
                </ContextMenu>
            </nodify:NodifyEditor.ContextMenu>

            <nodify:NodifyEditor.InputBindings>
                <KeyBinding Key="Delete"
                            Command="{Binding DeleteSelectionCommand}" />
                <KeyBinding Key="A"
                            Modifiers="Shift"
                            Command="{Binding AddStateCommand}"
                            CommandParameter="{Binding MouseLocation, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}" />
                <KeyBinding Gesture="Ctrl+A"
                            Command="{Binding SelectAllCommand}" />
            </nodify:NodifyEditor.InputBindings>
        </nodify:NodifyEditor>

        <Expander Header="Transitions"
                  HorizontalAlignment="Left"
                  Background="#2D2D30">
            <Border BorderBrush="#333336"
                    BorderThickness="1"
                    HorizontalAlignment="Stretch">
            </Border>
        </Expander>

        <Border CornerRadius="2"
                Background="#2D2D30"
                BorderThickness="0 0 0 1"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Margin="10 0">
            <StackPanel Orientation="Horizontal">
                <Button Command="{Binding PauseCommand}"
                        Visibility="{Binding IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}"
                               BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Content"
                                    Value="{StaticResource PauseIcon}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPaused}"
                                             Value="True">
                                    <Setter Property="Content"
                                            Value="{StaticResource UnpauseIcon}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Command="{Binding RunCommand}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter DataContext="{Binding}"
                                          Margin="0 0 4 0">
                            <ContentPresenter.Style>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <Setter Property="Content"
                                            Value="{StaticResource RunIcon}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRunning}"
                                                     Value="True">
                                            <Setter Property="Content"
                                                    Value="{StaticResource StopIcon}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Style>
                        </ContentPresenter>
                        <TextBlock Text="{Binding Name}" />
                    </StackPanel>
                </Button>
                <Separator Height="Auto"
                           BorderThickness="0 0 1 0" />
                <Button Content="{StaticResource ZoomInIcon}" />
                <Button Content="{StaticResource ZoomOutIcon}" />
            </StackPanel>
        </Border>
    </Grid>
</Window>
